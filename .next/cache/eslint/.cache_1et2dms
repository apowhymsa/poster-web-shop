[{"D:\\Projects\\poster-web-shop\\src\\app\\about-us\\page.tsx":"1","D:\\Projects\\poster-web-shop\\src\\app\\api\\categories\\route.ts":"2","D:\\Projects\\poster-web-shop\\src\\app\\api\\product\\[slug]\\route.ts":"3","D:\\Projects\\poster-web-shop\\src\\app\\api\\products\\route.ts":"4","D:\\Projects\\poster-web-shop\\src\\app\\api\\user\\route.ts":"5","D:\\Projects\\poster-web-shop\\src\\app\\layout.tsx":"6","D:\\Projects\\poster-web-shop\\src\\app\\page.tsx":"7","D:\\Projects\\poster-web-shop\\src\\app\\products\\layout.tsx":"8","D:\\Projects\\poster-web-shop\\src\\app\\products\\page.tsx":"9","D:\\Projects\\poster-web-shop\\src\\app\\products\\[slug]\\page.tsx":"10","D:\\Projects\\poster-web-shop\\src\\components\\Cart\\Cart.tsx":"11","D:\\Projects\\poster-web-shop\\src\\components\\Cart\\CartItem\\CartItem.tsx":"12","D:\\Projects\\poster-web-shop\\src\\components\\Footer\\Footer.tsx":"13","D:\\Projects\\poster-web-shop\\src\\components\\Header\\Header.tsx":"14","D:\\Projects\\poster-web-shop\\src\\components\\Header\\HeaderBurgerContent\\HeaderBurgerContent.tsx":"15","D:\\Projects\\poster-web-shop\\src\\components\\Header\\HeaderMain\\HeaderMain.tsx":"16","D:\\Projects\\poster-web-shop\\src\\components\\Header\\HeaderMain\\HeaderNav\\HeaderNav.tsx":"17","D:\\Projects\\poster-web-shop\\src\\components\\Header\\HeaderTop\\HeaderTop.tsx":"18","D:\\Projects\\poster-web-shop\\src\\components\\ModalSignUp\\ModalAuth.tsx":"19","D:\\Projects\\poster-web-shop\\src\\components\\ModalSignUp\\ModalSignIn.tsx":"20","D:\\Projects\\poster-web-shop\\src\\components\\ModalSignUp\\ModalSignUpStep1.tsx":"21","D:\\Projects\\poster-web-shop\\src\\components\\ModalSignUp\\ModalSignUpStep2.tsx":"22","D:\\Projects\\poster-web-shop\\src\\components\\ProductOverview\\ProductOverview.tsx":"23","D:\\Projects\\poster-web-shop\\src\\components\\ProductOverview\\ProductOverviewMobile.tsx":"24","D:\\Projects\\poster-web-shop\\src\\components\\Products\\CategoriesFilter\\CategoriesFilter.tsx":"25","D:\\Projects\\poster-web-shop\\src\\components\\Products\\ProductItem\\ProductItem.tsx":"26","D:\\Projects\\poster-web-shop\\src\\components\\Products\\ProductItem\\ProductItemSkeleton.tsx":"27","D:\\Projects\\poster-web-shop\\src\\components\\Products\\Products.tsx":"28","D:\\Projects\\poster-web-shop\\src\\components\\Products\\SortSelect\\SortSelect.tsx":"29","D:\\Projects\\poster-web-shop\\src\\components\\SwiperProducts\\SwiperProducts.tsx":"30","D:\\Projects\\poster-web-shop\\src\\components\\UI\\InputField\\InputField.tsx":"31","D:\\Projects\\poster-web-shop\\src\\components\\UI\\QuantityItemButton\\QuantityItemButton.tsx":"32","D:\\Projects\\poster-web-shop\\src\\components\\UI\\RangeSlider\\RangeSlider.tsx":"33","D:\\Projects\\poster-web-shop\\src\\contexts\\AuthContext\\AuthContext.ts":"34","D:\\Projects\\poster-web-shop\\src\\contexts\\AuthContext\\AuthContextProvider.tsx":"35","D:\\Projects\\poster-web-shop\\src\\contexts\\ModalContext\\ModalContext.ts":"36","D:\\Projects\\poster-web-shop\\src\\contexts\\ModalContext\\ModalContextProvider.tsx":"37","D:\\Projects\\poster-web-shop\\src\\contexts\\NavigationContext\\NavigationContext.ts":"38","D:\\Projects\\poster-web-shop\\src\\contexts\\NavigationContext\\NavigationContextProvider.tsx":"39","D:\\Projects\\poster-web-shop\\src\\hooks\\useDebounce.ts":"40","D:\\Projects\\poster-web-shop\\src\\hooks\\useToast.ts":"41","D:\\Projects\\poster-web-shop\\src\\types.ts":"42","D:\\Projects\\poster-web-shop\\src\\utils\\firebase\\firebase.ts":"43","D:\\Projects\\poster-web-shop\\src\\utils\\store\\cartSlice.ts":"44","D:\\Projects\\poster-web-shop\\src\\utils\\store\\categoriesSlice.ts":"45","D:\\Projects\\poster-web-shop\\src\\utils\\store\\commentsSlice.ts":"46","D:\\Projects\\poster-web-shop\\src\\utils\\store\\hooks.ts":"47","D:\\Projects\\poster-web-shop\\src\\utils\\store\\productSlice.ts":"48","D:\\Projects\\poster-web-shop\\src\\utils\\store\\provider.tsx":"49","D:\\Projects\\poster-web-shop\\src\\utils\\store\\store.ts":"50","D:\\Projects\\poster-web-shop\\src\\app\\checkout\\page.tsx":"51","D:\\Projects\\poster-web-shop\\src\\components\\SearchModal\\FindProductItem.tsx":"52","D:\\Projects\\poster-web-shop\\src\\components\\SearchModal\\SearchModal.tsx":"53","D:\\Projects\\poster-web-shop\\src\\utils\\getRad.ts":"54","D:\\Projects\\poster-web-shop\\src\\types.d.ts":"55","D:\\Projects\\poster-web-shop\\src\\app\\types.d.ts":"56","D:\\Projects\\poster-web-shop\\src\\components\\HomeComponent.tsx":"57","D:\\Projects\\poster-web-shop\\src\\components\\ProductsComponent.tsx":"58"},{"size":83,"mtime":1697191272421,"results":"59","hashOfConfig":"60"},{"size":407,"mtime":1698650124617,"results":"61","hashOfConfig":"60"},{"size":540,"mtime":1698650119800,"results":"62","hashOfConfig":"60"},{"size":491,"mtime":1698656253797,"results":"63","hashOfConfig":"60"},{"size":628,"mtime":1698650112009,"results":"64","hashOfConfig":"60"},{"size":1430,"mtime":1698660134796,"results":"65","hashOfConfig":"60"},{"size":550,"mtime":1698657078236,"results":"66","hashOfConfig":"60"},{"size":319,"mtime":1697191272425,"results":"67","hashOfConfig":"60"},{"size":869,"mtime":1698657087115,"results":"68","hashOfConfig":"60"},{"size":6691,"mtime":1698592987681,"results":"69","hashOfConfig":"60"},{"size":5386,"mtime":1698667680715,"results":"70","hashOfConfig":"60"},{"size":4390,"mtime":1697890538555,"results":"71","hashOfConfig":"60"},{"size":1994,"mtime":1697191272427,"results":"72","hashOfConfig":"60"},{"size":336,"mtime":1697191272427,"results":"73","hashOfConfig":"60"},{"size":1827,"mtime":1697191272427,"results":"74","hashOfConfig":"60"},{"size":5057,"mtime":1698667623675,"results":"75","hashOfConfig":"60"},{"size":969,"mtime":1697191272428,"results":"76","hashOfConfig":"60"},{"size":2059,"mtime":1698668345266,"results":"77","hashOfConfig":"60"},{"size":2281,"mtime":1698668602714,"results":"78","hashOfConfig":"60"},{"size":6452,"mtime":1698668819595,"results":"79","hashOfConfig":"60"},{"size":5374,"mtime":1697191272429,"results":"80","hashOfConfig":"60"},{"size":7015,"mtime":1698668109162,"results":"81","hashOfConfig":"60"},{"size":8449,"mtime":1698588964934,"results":"82","hashOfConfig":"60"},{"size":8381,"mtime":1698588981621,"results":"83","hashOfConfig":"60"},{"size":3226,"mtime":1698589054812,"results":"84","hashOfConfig":"60"},{"size":3220,"mtime":1697541387134,"results":"85","hashOfConfig":"60"},{"size":674,"mtime":1697191272432,"results":"86","hashOfConfig":"60"},{"size":1341,"mtime":1697191272432,"results":"87","hashOfConfig":"60"},{"size":1442,"mtime":1698588362616,"results":"88","hashOfConfig":"60"},{"size":3437,"mtime":1698230400982,"results":"89","hashOfConfig":"60"},{"size":1870,"mtime":1697709871462,"results":"90","hashOfConfig":"60"},{"size":1801,"mtime":1697191272433,"results":"91","hashOfConfig":"60"},{"size":1285,"mtime":1697191272434,"results":"92","hashOfConfig":"60"},{"size":276,"mtime":1697191272434,"results":"93","hashOfConfig":"60"},{"size":804,"mtime":1698660150667,"results":"94","hashOfConfig":"60"},{"size":367,"mtime":1698668213148,"results":"95","hashOfConfig":"60"},{"size":532,"mtime":1698669314738,"results":"96","hashOfConfig":"60"},{"size":114,"mtime":1697191272435,"results":"97","hashOfConfig":"60"},{"size":1105,"mtime":1698576475072,"results":"98","hashOfConfig":"60"},{"size":401,"mtime":1697270225203,"results":"99","hashOfConfig":"60"},{"size":891,"mtime":1697191272435,"results":"100","hashOfConfig":"60"},{"size":2374,"mtime":1697191272436,"results":"101","hashOfConfig":"60"},{"size":675,"mtime":1697191272436,"results":"102","hashOfConfig":"60"},{"size":2718,"mtime":1697891157609,"results":"103","hashOfConfig":"60"},{"size":560,"mtime":1697191272436,"results":"104","hashOfConfig":"60"},{"size":876,"mtime":1697549919732,"results":"105","hashOfConfig":"60"},{"size":279,"mtime":1697191272437,"results":"106","hashOfConfig":"60"},{"size":3185,"mtime":1697191272437,"results":"107","hashOfConfig":"60"},{"size":307,"mtime":1697191272437,"results":"108","hashOfConfig":"60"},{"size":554,"mtime":1697549623121,"results":"109","hashOfConfig":"60"},{"size":18159,"mtime":1698592011859,"results":"110","hashOfConfig":"60"},{"size":1525,"mtime":1698229862783,"results":"111","hashOfConfig":"60"},{"size":3700,"mtime":1698229957263,"results":"112","hashOfConfig":"60"},{"size":89,"mtime":1698582938658,"results":"113","hashOfConfig":"60"},{"size":46,"mtime":1697374668887,"results":"114","hashOfConfig":"60"},{"size":46,"mtime":1698590975337,"results":"115","hashOfConfig":"60"},{"size":4550,"mtime":1698656666508,"results":"116","hashOfConfig":"60"},{"size":7730,"mtime":1698656852577,"results":"117","hashOfConfig":"60"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1h6f8d7",{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190"},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194"},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","suppressedMessages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","suppressedMessages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","suppressedMessages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","suppressedMessages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","suppressedMessages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","suppressedMessages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","suppressedMessages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","suppressedMessages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"252","messages":"253","suppressedMessages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","suppressedMessages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"258","messages":"259","suppressedMessages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"261","messages":"262","suppressedMessages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","suppressedMessages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","suppressedMessages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","suppressedMessages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","suppressedMessages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276"},{"filePath":"277","messages":"278","suppressedMessages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"280","messages":"281","suppressedMessages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283"},{"filePath":"284","messages":"285","suppressedMessages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"287","messages":"288","suppressedMessages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"290","messages":"291","suppressedMessages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"293","messages":"294","suppressedMessages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296"},{"filePath":"297","messages":"298","suppressedMessages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300"},"D:\\Projects\\poster-web-shop\\src\\app\\about-us\\page.tsx",[],[],"D:\\Projects\\poster-web-shop\\src\\app\\api\\categories\\route.ts",[],[],"D:\\Projects\\poster-web-shop\\src\\app\\api\\product\\[slug]\\route.ts",[],[],"D:\\Projects\\poster-web-shop\\src\\app\\api\\products\\route.ts",[],[],"D:\\Projects\\poster-web-shop\\src\\app\\api\\user\\route.ts",[],[],"D:\\Projects\\poster-web-shop\\src\\app\\layout.tsx",[],[],"D:\\Projects\\poster-web-shop\\src\\app\\page.tsx",[],[],"D:\\Projects\\poster-web-shop\\src\\app\\products\\layout.tsx",[],[],"D:\\Projects\\poster-web-shop\\src\\app\\products\\page.tsx",[],[],"D:\\Projects\\poster-web-shop\\src\\app\\products\\[slug]\\page.tsx",["301"],[],"'use client'\r\n\r\nimport { Product } from '@/types'\r\nimport Image from 'next/image'\r\nimport { useContext, useEffect, useState } from 'react'\r\nimport Products from '@/components/Products/Products'\r\nimport { useAppDispatch, useAppSelector } from '@/utils/store/hooks'\r\nimport { setProducts } from '@/utils/store/productSlice'\r\nimport products from '@/components/Products/Products'\r\nimport QuantityItemButton from '@/components/UI/QuantityItemButton/QuantityItemButton'\r\nimport { StarIcon } from '@heroicons/react/24/solid'\r\nimport './Product.scss'\r\nimport ProductOverview from '@/components/ProductOverview/ProductOverview'\r\nimport ProductOverviewMobile from '@/components/ProductOverview/ProductOverviewMobile'\r\nimport SwiperProducts from '@/components/SwiperProducts/SwiperProducts'\r\nimport { setCartItem } from '@/utils/store/cartSlice'\r\nimport { Simulate } from 'react-dom/test-utils'\r\nimport load = Simulate.load\r\nimport Skeleton from 'react-loading-skeleton'\r\nimport { AuthContext } from '@/contexts/AuthContext/AuthContext'\r\nimport { createPortal } from 'react-dom'\r\nimport useToast from \"@/hooks/useToast\";\r\nimport axios from \"axios\";\r\n\r\nconst Page = ({ params }: { params: { slug: string } }) => {\r\n\tconst {error, info} = useToast();\r\n\tconst { isLoading, isLogged } = useContext(AuthContext)\r\n\tconst products = useAppSelector(state => state.productsReducer).products\r\n\tconst [product, setProduct] = useState<Product>()\r\n\tconst [quantity, setQuantity] = useState(1)\r\n\tconst [loading, setLoading] = useState(true)\r\n\tconst [tab, setTab] = useState(1)\r\n\tconst dispatch = useAppDispatch()\r\n\r\n\tuseEffect(() => {\r\n\t\tconst getProducts = async () => {\r\n\t\t\tconst response = await axios.get('/api/products/')\r\n\t\t\tconst products: Product[] = await response.data\r\n\t\t\tdispatch(setProducts(products))\r\n\t\t}\r\n\t\tconst getProduct = async () => {\r\n\t\t\tconst response = await axios.get('/api/product/' + params.slug)\r\n\t\t\tconst product: Product = await response.data\r\n\t\t\tsetProduct(product)\r\n\t\t}\r\n\r\n\t\tPromise.all([getProduct(), products.length === 0 && getProducts()]).finally(\r\n\t\t\t() => setLoading(false)\r\n\t\t)\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className='product-item-wrapper px-10 flex gap-x-6 py-10'>\r\n\t\t\t\t<div className='w-[40%] h-auto'>\r\n\t\t\t\t\t{loading ? (\r\n\t\t\t\t\t\t<Skeleton\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\theight: 'auto',\r\n\t\t\t\t\t\t\t\tobjectFit: 'cover',\r\n\t\t\t\t\t\t\t\tborderRadius: '8px',\r\n\t\t\t\t\t\t\t\tobjectPosition: 'center center',\r\n\t\t\t\t\t\t\t\taspectRatio: '1 / 1',\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\tsrc={\r\n\t\t\t\t\t\t\t\tproduct?.photo_origin\r\n\t\t\t\t\t\t\t\t\t? `https://poster-shop.joinposter.com${product?.photo_origin}`\r\n\t\t\t\t\t\t\t\t\t: '/flower_image.jpg'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// src=\"/flower_image.jpg\"\r\n\t\t\t\t\t\t\talt='Product Image'\r\n\t\t\t\t\t\t\twidth={0}\r\n\t\t\t\t\t\t\theight={0}\r\n\t\t\t\t\t\t\tsizes='100vw'\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\theight: 'auto',\r\n\t\t\t\t\t\t\t\tobjectFit: 'cover',\r\n\t\t\t\t\t\t\t\tborderRadius: '8px',\r\n\t\t\t\t\t\t\t\tobjectPosition: 'center center',\r\n\t\t\t\t\t\t\t\taspectRatio: '1 / 1',\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tplaceholder='blur'\r\n\t\t\t\t\t\t\tblurDataURL='/flower_image.jpg'\r\n\t\t\t\t\t\t\tpriority\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='product-top-info flex flex-col gap-y-6 flex-1'>\r\n\t\t\t\t\t<div className='flex flex-col gap-y-2'>\r\n\t\t\t\t\t\t{loading ? (\r\n\t\t\t\t\t\t\t<Skeleton />\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<p className='product-item-name font-semibold text-4xl'>\r\n\t\t\t\t\t\t\t\t{product?.product_name}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<div className='product-price-score-container flex gap-x-4 items-center'>\r\n\t\t\t\t\t\t\t{loading ? (\r\n\t\t\t\t\t\t\t\t<Skeleton inline className='w-6' />\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<p className='product-price text-xl'>\r\n\t\t\t\t\t\t\t\t\t&#8372; {product?.price['1'].slice(0, -2)}\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<span className='price-score-divider h-6 w-[1px] bg-gray-300'></span>\r\n\t\t\t\t\t\t\t<div className='flex items-center'>\r\n\t\t\t\t\t\t\t\t{loading ? (\r\n\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t<Skeleton circle count={5} className='h-5 w-5' inline />\r\n\t\t\t\t\t\t\t\t\t\t<Skeleton />\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t<StarIcon className='text-[#facc15] h-5 w-5' />\r\n\t\t\t\t\t\t\t\t\t\t<StarIcon className='text-[#facc15] h-5 w-5' />\r\n\t\t\t\t\t\t\t\t\t\t<StarIcon className='text-[#facc15] h-5 w-5' />\r\n\t\t\t\t\t\t\t\t\t\t<StarIcon className='text-[#facc15] h-5 w-5' />\r\n\t\t\t\t\t\t\t\t\t\t<StarIcon className='text-[#facc15] h-5 w-5' />\r\n\t\t\t\t\t\t\t\t\t\t<span className='product-score-count text-[#6b88b5] text-sm ml-2'>\r\n\t\t\t\t\t\t\t\t\t\t\t500 оценок\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{/*<p>{product?.product_production_description}</p>*/}\r\n\t\t\t\t\t\t{loading ? (\r\n\t\t\t\t\t\t\t<Skeleton />\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<QuantityItemButton\r\n\t\t\t\t\t\t\t\tquantity={quantity}\r\n\t\t\t\t\t\t\t\tsetQuantity={setQuantity}\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tif (!isLogged) {\r\n\t\t\t\t\t\t\t\t\t\terror('Для добавления товара в корзину зайдите в аккаунт');\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tdispatch(\r\n\t\t\t\t\t\t\t\t\t\t\tsetCartItem({\r\n\t\t\t\t\t\t\t\t\t\t\t\tproduct: product as Product,\r\n\t\t\t\t\t\t\t\t\t\t\t\tquantity: quantity,\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\r\n\t\t\t\t\t\t\t\t\t\tinfo('Товар успешно добавлен в корзину');\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{loading ? (\r\n\t\t\t\t\t\t<Skeleton />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<ProductOverview\r\n\t\t\t\t\t\t\tproductId={product?.product_id}\r\n\t\t\t\t\t\t\tclassNameContainer={'product-additional-info w-full'}\r\n\t\t\t\t\t\t\tsetTab={setTab}\r\n\t\t\t\t\t\t\ttab={tab}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<ProductOverviewMobile\r\n\t\t\t\tproductId={product?.product_id}\r\n\t\t\t\tclassNameContainer={'product-additional-info-mobile w-full my-4'}\r\n\t\t\t\tsetTab={setTab}\r\n\t\t\t\ttab={tab}\r\n\t\t\t/>\r\n\t\t\t<div className='products-recommendation   mb-7'>\r\n\t\t\t\t<div className='flex flex-col justify-center items-center mb-7 bg-[#e5e7eb] bg-opacity-50'>\r\n\t\t\t\t\t<Image\r\n\t\t\t\t\t\tsrc='/split_flower.svg'\r\n\t\t\t\t\t\talt='Product Image'\r\n\t\t\t\t\t\twidth={0}\r\n\t\t\t\t\t\theight={0}\r\n\t\t\t\t\t\tsizes='100vw'\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\twidth: '200px',\r\n\t\t\t\t\t\t\theight: '100px',\r\n\t\t\t\t\t\t\tbackgroundSize: '100% 100%',\r\n\t\t\t\t\t\t\tobjectFit: 'cover',\r\n\t\t\t\t\t\t\tobjectPosition: 'center center',\r\n\t\t\t\t\t\t\taspectRatio: '1 / 1',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tplaceholder='blur'\r\n\t\t\t\t\t\tblurDataURL='/split_flower.svg'\r\n\t\t\t\t\t\tpriority\r\n\t\t\t\t\t></Image>\r\n\t\t\t\t\t<h2 className='text-3xl  font-medium mb-4 '>Похожие товары </h2>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='px-11'>\r\n\t\t\t\t\t<SwiperProducts\r\n\t\t\t\t\t\tisLoading={loading}\r\n\t\t\t\t\t\tbreakpoints={{\r\n\t\t\t\t\t\t\t320: {\r\n\t\t\t\t\t\t\t\tslidesPerView: 1.3,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t485: {\r\n\t\t\t\t\t\t\t\tslidesPerView: 2.3,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t700: {\r\n\t\t\t\t\t\t\t\tslidesPerView: 3.3,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t1000: {\r\n\t\t\t\t\t\t\t\tslidesPerView: 4.5,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tproducts={products}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Page\r\n","D:\\Projects\\poster-web-shop\\src\\components\\Cart\\Cart.tsx",["302"],[],"import \"./Cart.scss\";\r\nimport {Dispatch, SetStateAction, useEffect, useState} from \"react\";\r\nimport Image from \"next/image\";\r\nimport QuantityItemButton from \"@/components/UI/QuantityItemButton/QuantityItemButton\";\r\nimport {MinusIcon, PlusIcon} from \"@heroicons/react/24/outline\";\r\nimport {useAppDispatch, useAppSelector} from \"@/utils/store/hooks\";\r\nimport CartItem from \"@/components/Cart/CartItem/CartItem\";\r\nimport cartItem from \"@/components/Cart/CartItem/CartItem\";\r\nimport {clearCart, setCart, setCartItem} from \"@/utils/store/cartSlice\";\r\nimport {\r\n    collection,\r\n    doc,\r\n    getDoc,\r\n    onSnapshot,\r\n    setDoc,\r\n} from \"@firebase/firestore\";\r\nimport {auth, db} from \"@/utils/firebase/firebase\";\r\nimport {onAuthStateChanged} from \"@firebase/auth\";\r\nimport {useRouter} from \"next/navigation\";\r\nimport {useLoadScript} from \"@react-google-maps/api\";\r\nimport usePlacesAutocomplete, {\r\n    getGeocode,\r\n    getLatLng,\r\n} from \"use-places-autocomplete\";\r\n\r\ntype Props = {\r\n    isOpen: boolean;\r\n    setOpen: Dispatch<SetStateAction<boolean>>;\r\n};\r\nconst Cart = (props: Props) => {\r\n    const {setOpen, isOpen} = props;\r\n    const cart = useAppSelector((state) => state.cartReducer).cart;\r\n    const dispatch = useAppDispatch();\r\n    const router = useRouter()\r\n\r\n    useEffect(() => {\r\n        const userAuthId = localStorage.getItem(\"authUserId\");\r\n\r\n        onAuthStateChanged(auth, async (user) => {\r\n            if (user) {\r\n                if (userAuthId) {\r\n                    console.log(\"auth\", userAuthId);\r\n\r\n                    getCart(userAuthId);\r\n                }\r\n            } else {\r\n                dispatch(setCart([]));\r\n            }\r\n        });\r\n\r\n\r\n    }, []);\r\n\r\n    const getCart = async (userAuthId: string) => {\r\n        const userRef = doc(db, \"users\", userAuthId!.toString());\r\n        const userSnapshot = await getDoc(userRef);\r\n\r\n        dispatch(setCart(userSnapshot.data()?.cart || []));\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className={\r\n                isOpen\r\n                    ? \"product-cart cart_active drop-shadow-2xl\"\r\n                    : \"product-cart\"\r\n            }\r\n        >\r\n            <h3 className=\"font-medium text-[16px] text-center\">Корзина</h3>\r\n            {cart.length <= 0 ? (\r\n                <div className=\"flex flex-col justify-between gap-y-10 items-center\">\r\n                    <Image\r\n                        // src=\"/flower.svg\"\r\n                        src=\"/cart_icon.svg\"\r\n                        alt=\"Product Image\"\r\n                        width={0}\r\n                        height={0}\r\n                        sizes=\"20vw\"\r\n                        style={{\r\n                            width: \"40%\",\r\n                            height: \"auto\",\r\n                            objectFit: \"cover\",\r\n                            borderRadius: \"8px\",\r\n                            objectPosition: \"center center\",\r\n                            aspectRatio: \"1 / 1\",\r\n                        }}\r\n                        placeholder=\"blur\"\r\n                        blurDataURL=\"/cart_icon.svg\"\r\n                        priority\r\n                    />\r\n                    <h2 className=\"font-bold\">Товаров нет</h2>\r\n                    <p className=\"text-neutral-400 text-center\">\r\n                        {\" \"}\r\n                        Для оформления заказа добавьте товар в корзину\r\n                    </p>\r\n                </div>\r\n            ) : (\r\n                <div className=\"cart-container flex flex-col gap-y-5 flex-1\">\r\n                    <p\r\n                        className=\"text-[15px] text-right mt-5 transition-colors hover:text-rose-400 cursor-pointer\"\r\n                        onClick={() => dispatch(clearCart())}\r\n                    >\r\n                        Очистить корзину\r\n                    </p>\r\n                    {cart.map((cartItem) => (\r\n                        <CartItem\r\n                            key={cartItem.product.product_id}\r\n                            cartItem={cartItem}\r\n                            quantityItem={cartItem.quantity}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            )}\r\n            {cart.length > 0 ? (\r\n                <div className=\"mt-5 flex flex-col gap-y-2\">\r\n                    <div className=\"flex justify-between\">\r\n                        <span className=\"text-[15px]\">Полная цена</span>\r\n                        <span className=\"text-[15px] font-medium\">\r\n              &#8372;{\" \"}\r\n                            {cart.reduce(\r\n                                (acc, cartItem) =>\r\n                                    acc +\r\n                                    Number(cartItem.product.price[\"1\"].slice(0, -2)) *\r\n                                    cartItem.quantity,\r\n                                0,\r\n                            )}\r\n            </span>\r\n                    </div>\r\n                    <button\r\n                        className=\" w-full h-10 transition-colors bg-rose-400 hover:bg-rose-500 rounded text-white\"\r\n                        onClick={() => router.push('/checkout')}\r\n                    >\r\n                        Продолжить\r\n                    </button>\r\n                </div>\r\n            ) : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cart;\r\n","D:\\Projects\\poster-web-shop\\src\\components\\Cart\\CartItem\\CartItem.tsx",["303"],[],"import Image from \"next/image\";\r\nimport {MinusIcon, PlusIcon, TrashIcon} from \"@heroicons/react/24/outline\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Product } from \"@/types\";\r\nimport {Cart, deleteItem, updateQuantity} from \"@/utils/store/cartSlice\";\r\nimport { useAppDispatch } from \"@/utils/store/hooks\";\r\nimport QuantityItemButton from \"@/components/UI/QuantityItemButton/QuantityItemButton\";\r\nimport useDebounce from \"@/hooks/useDebounce\";\r\n\r\ntype Props = {\r\n  cartItem: Cart;\r\n  quantityItem: number;\r\n  inCheckout?: boolean;\r\n};\r\n\r\nconst CartItem = ({ quantityItem, cartItem, inCheckout = false }: Props) => {\r\n  const [quantity, setQuantity] = useState(quantityItem);\r\n  const debouncedQuantity = useDebounce<number>(quantity, 500);\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    setQuantity(quantityItem);\r\n  }, [quantityItem]);\r\n\r\n  useEffect(() => {\r\n    console.log('debounce update');\r\n\r\n    dispatch(\r\n      updateQuantity({\r\n        product: cartItem.product,\r\n        quantity: quantity,\r\n      }),\r\n    );\r\n  }, [debouncedQuantity]);\r\n\r\n  return (\r\n    <div\r\n      key={cartItem.product.product_id}\r\n      className=\"relative cart-item flex gap-x-2 after:absolute after:-bottom-[10px] after:w-full after:h-[0.5px] after:bg-[#e5e7eb]\"\r\n    >\r\n      <span className=\"absolute top-0 right-0 w-5 h-5 cursor-pointer\" title=\"Удалить товар\" onClick={() => {\r\ndispatch(deleteItem(cartItem));\r\n      }}>\r\n        <TrashIcon className=\"h-5 w-5 text-black transition-colors hover:text-rose-400 \"/>\r\n      </span>\r\n      <Image\r\n        src={\r\n          cartItem.product.photo\r\n            ? `https://poster-shop.joinposter.com${cartItem.product.photo}`\r\n            : \"/flower_image.jpg\"\r\n        }\r\n        alt=\"Product Image\"\r\n        width={0}\r\n        height={0}\r\n        sizes=\"100vw\"\r\n        style={{\r\n          width: \"100px\",\r\n          height: \"auto\",\r\n          objectFit: \"cover\",\r\n          borderRadius: \"8px\",\r\n          objectPosition: \"center center\",\r\n          aspectRatio: \"1 / 1\",\r\n        }}\r\n        priority\r\n      />\r\n      <div className=\"flex flex-col flex-1 justify-between py-5\">\r\n        <div className=\"item-description flex justify-between items-center\">\r\n          <span className=\"text-[15px] overflow-ellipsis max-w-[175px] overflow-hidden whitespace-nowrap\" title={cartItem.product.product_name}>{cartItem.product.product_name}</span>\r\n            {!inCheckout && (\r\n                <span className=\"text-[15px] font-medium\">\r\n            &#8372; {cartItem.product.price[\"1\"].slice(0, -2)}\r\n          </span>\r\n            )}\r\n        </div>\r\n          {inCheckout ? (\r\n              <div>\r\n                  <span>Цена: {`${cartItem.quantity} ед. x ${cartItem.product.price[\"1\"].slice(0, -2)} грн = ${cartItem.quantity * Number(cartItem.product.price[\"1\"].slice(0, -2))}`} грн</span>\r\n              </div>\r\n          ) : (\r\n              <div className=\"item-quantity-edit flex gap-x-4\">\r\n                  <button\r\n                      className=\"flex items-center justify-center bg-rose-400 transition-colors hover:bg-rose-500 w-7 h-7 rounded\"\r\n                      onClick={() => {\r\n                          quantity > 1 && setQuantity((prev) => prev - 1);\r\n                      }}\r\n                  >\r\n                      <MinusIcon className=\"h-6 w-6 text-white\" />\r\n                  </button>\r\n                  <input\r\n                      value={quantity}\r\n                      onChange={(event) => setQuantity(Number(event.target.value))}\r\n                      min={1}\r\n                      max={100}\r\n                      type=\"number\"\r\n                      className=\"block flex-1 rounded-md border-gray-300 shadow-sm focus:border-rose-400 disabled:cursor-not-allowed disabled:bg-gray-50 disabled:text-gray-500 h-7 text-sm\"\r\n                  />\r\n                  <button\r\n                      className=\"flex items-center justify-center bg-rose-400 transition-colors hover:bg-rose-500 w-7 h-7 rounded\"\r\n                      onClick={() => {\r\n                          quantity < 100 && setQuantity((prev) => prev + 1);\r\n                      }}\r\n                  >\r\n                      <PlusIcon className=\"h-6 w-6 text-white\" />\r\n                  </button>\r\n              </div>\r\n          )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","D:\\Projects\\poster-web-shop\\src\\components\\Footer\\Footer.tsx",[],[],"D:\\Projects\\poster-web-shop\\src\\components\\Header\\Header.tsx",[],[],"D:\\Projects\\poster-web-shop\\src\\components\\Header\\HeaderBurgerContent\\HeaderBurgerContent.tsx",[],["304"],"D:\\Projects\\poster-web-shop\\src\\components\\Header\\HeaderMain\\HeaderMain.tsx",[],[],"D:\\Projects\\poster-web-shop\\src\\components\\Header\\HeaderMain\\HeaderNav\\HeaderNav.tsx",[],[],"D:\\Projects\\poster-web-shop\\src\\components\\Header\\HeaderTop\\HeaderTop.tsx",[],[],"D:\\Projects\\poster-web-shop\\src\\components\\ModalSignUp\\ModalAuth.tsx",[],[],"D:\\Projects\\poster-web-shop\\src\\components\\ModalSignUp\\ModalSignIn.tsx",[],[],"D:\\Projects\\poster-web-shop\\src\\components\\ModalSignUp\\ModalSignUpStep1.tsx",[],[],"D:\\Projects\\poster-web-shop\\src\\components\\ModalSignUp\\ModalSignUpStep2.tsx",[],[],"D:\\Projects\\poster-web-shop\\src\\components\\ProductOverview\\ProductOverview.tsx",["305"],[],"import Image from \"next/image\";\r\nimport { StarIcon } from \"@heroicons/react/24/solid\";\r\nimport {Dispatch, SetStateAction, useEffect, useState} from \"react\";\r\nimport {addDoc, collection, doc, getDoc, onSnapshot} from \"@firebase/firestore\";\r\nimport {db} from \"@/utils/firebase/firebase\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport {toast} from \"react-toastify\";\r\nimport useToast from \"@/hooks/useToast\";\r\nimport {useAppDispatch, useAppSelector} from \"@/utils/store/hooks\";\r\nimport {setComments} from \"@/utils/store/commentsSlice\";\r\n\r\ntype Props = {\r\n  classNameContainer: string;\r\n  setTab: Dispatch<SetStateAction<number>>;\r\n  tab: number;\r\n  productId: string | undefined;\r\n};\r\nconst ProductOverview = (props: Props) => {\r\n  const {info, error} = useToast();\r\n  const [rating, setRating] = useState<number>(0);\r\n  const [comment, setComment] = useState<string>('');\r\n  const comments = useAppSelector(state => state.commentsReducer).comments;\r\n  const dispatch = useAppDispatch();\r\n  const { tab, setTab, classNameContainer, productId } = props;\r\n  const addCommentHandler = async () => {\r\n    const userId = localStorage.getItem(\"authUserId\");\r\n\r\n    if (userId) {\r\n      const commentsRef = collection(db, 'comments');\r\n\r\n      const userRef = doc(db, 'users', userId!.toString());\r\n      const user = await getDoc(userRef);\r\n\r\n      let today = new Date();\r\n      let dd = String(today.getDate()).padStart(2, '0');\r\n      let mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n      let yyyy = today.getFullYear();\r\n\r\n      let date = dd + '.' + mm + '.' + yyyy;\r\n\r\n      const ms = new Date().getTime();\r\n\r\n      const commentObj = {\r\n        productId: productId,\r\n        rating: rating,\r\n        commentText: comment,\r\n        publishingDate: date,\r\n        dateInMs: ms,\r\n        userName: user.data()?.name,\r\n        userPhoto: user.data()?.profilePhoto\r\n      }\r\n\r\n      addDoc(commentsRef, {\r\n        ...commentObj\r\n      })\r\n          .then(() => {\r\n            info('Отзыв успешно опубликован 😍');\r\n            setRating(0);\r\n            setComment('');\r\n          })\r\n          .catch(() => {\r\n            info('Ошибка публикации отзыва 😢');\r\n          })\r\n    } else {\r\n      error('Войдите в аккаунт для публикации отзыва 😳');\r\n    }\r\n\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsub = onSnapshot(collection(db, 'comments'), (collection) => {\r\n      const commentsCollection = collection.docs\r\n          .sort((a, b) => b.data().dateInMs - a.data().dateInMs)\r\n          .filter(comment => comment.data().productId === productId)\r\n          .map((comment) => comment.data());\r\n\r\n      dispatch(setComments(commentsCollection))\r\n    })\r\n\r\n    return () => unsub();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(comments);\r\n  }, [comments]);\r\n\r\n  return (\r\n    <div className={classNameContainer}>\r\n      <div className=\"flex flex-col gap-y-3 w-full\">\r\n        <div className=\"flex gap-x-3 border-b border-b-gray-10 w-full\">\r\n          <ul className=\"flex gap-x-5 w-full\">\r\n            <li\r\n              onClick={() => setTab(1)}\r\n              className={\r\n                tab === 1\r\n                  ? \"transition-colors inline-flex cursor-pointer items-center gap-2 px-1 py-3 hover:text-rose-400 relative text-rose-400  after:absolute after:left-0 after:bottom-0 after:h-0.5 after:w-full after:bg-rose-400\"\r\n                  : \"transition-colors inline-flex cursor-pointer items-center gap-2 px-1 py-3 text-black hover:text-rose-500\"\r\n              }\r\n            >\r\n              Информация для покупателя\r\n            </li>\r\n            <li\r\n              onClick={() => setTab(2)}\r\n              className={\r\n                tab === 2\r\n                  ? \"transition-colors inline-flex cursor-pointer items-center gap-2 px-1 py-3 hover:text-rose-400 relative text-rose-400  after:absolute after:left-0 after:bottom-0 after:h-0.5 after:w-full after:bg-rose-400\"\r\n                  : \"transition-colors inline-flex cursor-pointer items-center gap-2 px-1 py-3 text-black hover:text-rose-500\"\r\n              }\r\n            >\r\n              Отзывы\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        {tab === 1 && <div>Info</div>}\r\n        {tab === 2 && (\r\n          <div className=\"flex flex-col gap-y-8 max-h-[300px] overflow-y-auto px-1 py-2\">\r\n            <div className=\"max-w-full\">\r\n              <div className=\"relative overflow-hidden rounded-md border border-gray-300 shadow-sm focus-within:border-primary-300 focus-within:ring focus-within:ring-primary-200 focus-within:ring-opacity-50\">\r\n                <textarea\r\n                    value={comment}\r\n                    onChange={(e) => setComment(e.target.value)}\r\n                  id=\"example5\"\r\n                  className=\"block w-full border-0 focus:border-0 focus:ring-0\"\r\n                  rows={3}\r\n                  placeholder=\"Ваш комментарий\"\r\n                ></textarea>\r\n                <div className=\"flex w-full items-center justify-between bg-white p-2\">\r\n                  <button\r\n                      disabled={rating <= 0}\r\n                      onClick={addCommentHandler}\r\n                    type=\"button\"\r\n                    className=\"rounded border border-rose-400 bg-rose-400 px-2 py-1.5 text-center text-sm font-medium text-white shadow-sm transition-all hover:bg-rose-500 disabled:cursor-not-allowed disabled:border-red-300 disabled:bg-red-300\"\r\n                  >\r\n                    Оставить комментарий\r\n                  </button>\r\n                  <div className=\"flex gap-x-3\">\r\n                    <span>Оценка: </span>\r\n                  <ReactStars\r\n                      count={5}\r\n                      value={rating}\r\n                      onChange={(newValue: number) => setRating(newValue)}\r\n                      size={24}\r\n                      emptyIcon={<StarIcon className=\"text-[#f4f4f4] h-5 w-5\" />}\r\n                      filledIcon={<StarIcon className=\"text-[#facc15] h-5 w-5\" />}\r\n                      activeColor=\"#ffd700\"\r\n                  />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/*border-b pb-8*/}\r\n            {comments.length <= 0 ? (\r\n                <div>Комментарии отсутствуют</div>\r\n            ) : (\r\n                comments.map((currentComment) => (\r\n                      <div key={currentComment.dateInMs} className=\"flex gap-x-4 border-b pb-8\">\r\n                        {/*//TODO Insert user image*/}\r\n                        <Image\r\n                            src=\"https://i.pravatar.cc/50\"\r\n                            alt=\"Profile Photo\"\r\n                            width={50}\r\n                            height={50}\r\n                            style={{\r\n                              width: \"50px\",\r\n                              height: \"50px\",\r\n                              objectFit: \"cover\",\r\n                              borderRadius: \"100%\",\r\n                            }}\r\n                            priority\r\n                        />\r\n                        <div className=\"flex flex-col gap-y-3\">\r\n                          <div className=\"flex flex-col\">\r\n                            <span>{currentComment.userName}</span>\r\n                            <span className=\"text-[#6b7290]\">{currentComment.publishingDate}</span>\r\n                          </div>\r\n                          <div className=\"flex\">\r\n                            {[0,0,0,0,0].map((value, index) => (\r\n                                index <= currentComment.rating - 1 ? (\r\n                                    <StarIcon key={index + 1} className=\"text-[#facc15] h-5 w-5\"/>\r\n                                ) : (\r\n                                    <StarIcon key={index + 2} className=\"text-[#f4f4f4] h-5 w-5\" />\r\n                                )\r\n                            ))}\r\n                          </div>\r\n                          <div>\r\n                  <span>\r\n                    {currentComment.commentText}\r\n                  </span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                  ))\r\n            )}\r\n\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductOverview;\r\n","D:\\Projects\\poster-web-shop\\src\\components\\ProductOverview\\ProductOverviewMobile.tsx",["306"],[],"import Image from \"next/image\";\r\nimport { StarIcon } from \"@heroicons/react/24/solid\";\r\nimport {Dispatch, SetStateAction, useEffect, useState} from \"react\";\r\nimport useToast from \"@/hooks/useToast\";\r\nimport {addDoc, collection, doc, getDoc, onSnapshot} from \"@firebase/firestore\";\r\nimport {db} from \"@/utils/firebase/firebase\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport {useAppDispatch, useAppSelector} from \"@/utils/store/hooks\";\r\nimport {setComments} from \"@/utils/store/commentsSlice\";\r\n\r\ntype Props = {\r\n  classNameContainer: string;\r\n  setTab: Dispatch<SetStateAction<number>>;\r\n  tab: number;\r\n  productId: string | undefined;\r\n};\r\n\r\nconst ProductOverviewMobile = (props: Props) => {\r\n  const {info, error} = useToast();\r\n  const [rating, setRating] = useState<number>(0);\r\n  const [comment, setComment] = useState<string>('');\r\n  const comments = useAppSelector(state => state.commentsReducer).comments;\r\n  const dispatch = useAppDispatch();\r\n  const { tab, setTab, classNameContainer, productId } = props;\r\n  const addCommentHandler = async () => {\r\n    const userId = localStorage.getItem(\"authUserId\");\r\n\r\n    if (userId) {\r\n      const commentsRef = collection(db, 'comments');\r\n\r\n      const userRef = doc(db, 'users', userId!.toString());\r\n      const user = await getDoc(userRef);\r\n\r\n      let today = new Date();\r\n      let dd = String(today.getDate()).padStart(2, '0');\r\n      let mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n      let yyyy = today.getFullYear();\r\n\r\n      let date = dd + '.' + mm + '.' + yyyy;\r\n\r\n      const ms = new Date().getTime();\r\n\r\n      const commentObj = {\r\n        productId: productId,\r\n        rating: rating,\r\n        commentText: comment,\r\n        publishingDate: date,\r\n        dateInMs: ms,\r\n        userName: user.data()?.name,\r\n        userPhoto: user.data()?.profilePhoto\r\n      }\r\n\r\n      addDoc(commentsRef, {\r\n        ...commentObj\r\n      })\r\n          .then(() => {\r\n            info('Отзыв успешно опубликован 😍');\r\n            setRating(0);\r\n            setComment('');\r\n          })\r\n          .catch(() => {\r\n            info('Ошибка публикации отзыва 😢');\r\n          })\r\n    } else {\r\n      error('Войдите в аккаунт для публикации отзыва 😳');\r\n    }\r\n\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsub = onSnapshot(collection(db, 'comments'), (collection) => {\r\n      const commentsCollection = collection.docs\r\n          .sort((a, b) => b.data().dateInMs - a.data().dateInMs)\r\n          .filter(comment => comment.data().productId === productId)\r\n          .map((comment) => comment.data());\r\n\r\n      dispatch(setComments(commentsCollection))\r\n    })\r\n\r\n    return () => unsub();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(comments);\r\n  }, [comments]);\r\n\r\n  return (\r\n    <div className={classNameContainer}>\r\n      <div className=\"flex flex-col gap-y-3 w-full\">\r\n        <div className=\"flex gap-x-3 border-b border-b-gray-10 w-full\">\r\n          <ul className=\"flex gap-x-5 w-full\">\r\n            <li\r\n              onClick={() => setTab(1)}\r\n              className={\r\n                tab === 1\r\n                  ? \"transition-colors inline-flex cursor-pointer items-center gap-2 px-1 py-3 hover:text-rose-400 relative text-rose-400  after:absolute after:left-0 after:bottom-0 after:h-0.5 after:w-full after:bg-rose-400\"\r\n                  : \"transition-colors inline-flex cursor-pointer items-center gap-2 px-1 py-3 text-black hover:text-rose-500\"\r\n              }\r\n            >\r\n              Информация для покупателя\r\n            </li>\r\n            <li\r\n              onClick={() => setTab(2)}\r\n              className={\r\n                tab === 2\r\n                  ? \"transition-colors inline-flex cursor-pointer items-center gap-2 px-1 py-3 hover:text-rose-400 relative text-rose-400  after:absolute after:left-0 after:bottom-0 after:h-0.5 after:w-full after:bg-rose-400\"\r\n                  : \"transition-colors inline-flex cursor-pointer items-center gap-2 px-1 py-3 text-black hover:text-rose-500\"\r\n              }\r\n            >\r\n              Отзывы\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        {tab === 1 && <div>Info</div>}\r\n        {tab === 2 && (\r\n          <div className=\"flex flex-col gap-y-4 max-h-[300px] overflow-y-auto px-1 py-2\">\r\n            <div className=\"max-w-full\">\r\n              <div className=\"relative overflow-hidden rounded-md border border-gray-300 shadow-sm focus-within:border-primary-300 focus-within:ring focus-within:ring-primary-200 focus-within:ring-opacity-50\">\r\n                <textarea\r\n                    value={comment}\r\n                    onChange={(e) => setComment(e.target.value)}\r\n                  id=\"example5\"\r\n                  className=\"block w-full border-0 focus:border-0 focus:ring-0\"\r\n                  rows={3}\r\n                  placeholder=\"Ваш комментарий\"\r\n                ></textarea>\r\n                <div className=\"flex w-full items-center justify-between bg-white p-2\">\r\n                  <button\r\n                      disabled={rating <= 0}\r\n                      onClick={addCommentHandler}\r\n                      type=\"button\"\r\n                      className=\"rounded border border-rose-400 bg-rose-400 px-2 py-1.5 text-center text-sm font-medium text-white shadow-sm transition-all hover:bg-rose-500 disabled:cursor-not-allowed disabled:border-red-300 disabled:bg-red-300\"\r\n                  >\r\n                    Оставить комментарий\r\n                  </button>\r\n                  <div className=\"flex gap-x-3\">\r\n                    <span>Оценка: </span>\r\n                    <ReactStars\r\n                        count={5}\r\n                        value={rating}\r\n                        onChange={(newValue: number) => setRating(newValue)}\r\n                        size={24}\r\n                        emptyIcon={<StarIcon className=\"text-[#f4f4f4] h-5 w-5\" />}\r\n                        filledIcon={<StarIcon className=\"text-[#facc15] h-5 w-5\" />}\r\n                        activeColor=\"#ffd700\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {comments.length <= 0 ? (\r\n                    <div>Комментарии отсутствуют</div>\r\n                ) : (\r\n                comments.map((currentComment) => (\r\n                <div key={currentComment.dateInMs} className=\"flex flex-col gap-x-4 border-b pb-4\">\r\n                  <div className=\"flex justify-between\">\r\n                    <Image\r\n                        src=\"https://i.pravatar.cc/50\"\r\n                        alt=\"Profile Photo\"\r\n                        width={50}\r\n                        height={50}\r\n                        style={{\r\n                          width: \"50px\",\r\n                          height: \"50px\",\r\n                          objectFit: \"cover\",\r\n                          borderRadius: \"100%\",\r\n                        }}\r\n                        priority\r\n                    />\r\n                    <div className=\"flex flex-col gap-y-3\">\r\n                      <div className=\"flex flex-col\">\r\n                        <span>{currentComment.userName}</span>\r\n                        <span className=\"text-[#6b7290]\">{currentComment.publishingDate}</span>\r\n                      </div>\r\n                      <div className=\"flex\">\r\n                        {[0,0,0,0,0].map((value, index) => (\r\n                            index <= currentComment.rating - 1 ? (\r\n                                <StarIcon key={index + 1} className=\"text-[#facc15] h-5 w-5\"/>\r\n                            ) : (\r\n                                <StarIcon key={index + 2} className=\"text-[#f4f4f4] h-5 w-5\" />\r\n                            )\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"mt-3\">\r\n                <span className=\"product-overview-text-mobile text-justify inline-block w-full\">\r\n                  {currentComment.commentText}\r\n                </span>\r\n                  </div>\r\n                </div>\r\n            )))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductOverviewMobile;\r\n","D:\\Projects\\poster-web-shop\\src\\components\\Products\\CategoriesFilter\\CategoriesFilter.tsx",[],[],"D:\\Projects\\poster-web-shop\\src\\components\\Products\\ProductItem\\ProductItem.tsx",[],[],"D:\\Projects\\poster-web-shop\\src\\components\\Products\\ProductItem\\ProductItemSkeleton.tsx",[],[],"D:\\Projects\\poster-web-shop\\src\\components\\Products\\Products.tsx",[],[],"D:\\Projects\\poster-web-shop\\src\\components\\Products\\SortSelect\\SortSelect.tsx",[],[],"D:\\Projects\\poster-web-shop\\src\\components\\SwiperProducts\\SwiperProducts.tsx",[],[],"D:\\Projects\\poster-web-shop\\src\\components\\UI\\InputField\\InputField.tsx",[],[],"D:\\Projects\\poster-web-shop\\src\\components\\UI\\QuantityItemButton\\QuantityItemButton.tsx",[],[],"D:\\Projects\\poster-web-shop\\src\\components\\UI\\RangeSlider\\RangeSlider.tsx",[],[],"D:\\Projects\\poster-web-shop\\src\\contexts\\AuthContext\\AuthContext.ts",[],[],"D:\\Projects\\poster-web-shop\\src\\contexts\\AuthContext\\AuthContextProvider.tsx",[],[],"D:\\Projects\\poster-web-shop\\src\\contexts\\ModalContext\\ModalContext.ts",[],[],"D:\\Projects\\poster-web-shop\\src\\contexts\\ModalContext\\ModalContextProvider.tsx",[],[],"D:\\Projects\\poster-web-shop\\src\\contexts\\NavigationContext\\NavigationContext.ts",[],[],"D:\\Projects\\poster-web-shop\\src\\contexts\\NavigationContext\\NavigationContextProvider.tsx",[],[],"D:\\Projects\\poster-web-shop\\src\\hooks\\useDebounce.ts",[],[],"D:\\Projects\\poster-web-shop\\src\\hooks\\useToast.ts",[],[],"D:\\Projects\\poster-web-shop\\src\\types.ts",[],[],"D:\\Projects\\poster-web-shop\\src\\utils\\firebase\\firebase.ts",[],[],"D:\\Projects\\poster-web-shop\\src\\utils\\store\\cartSlice.ts",[],[],"D:\\Projects\\poster-web-shop\\src\\utils\\store\\categoriesSlice.ts",[],[],"D:\\Projects\\poster-web-shop\\src\\utils\\store\\commentsSlice.ts",[],[],"D:\\Projects\\poster-web-shop\\src\\utils\\store\\hooks.ts",[],[],"D:\\Projects\\poster-web-shop\\src\\utils\\store\\productSlice.ts",[],[],"D:\\Projects\\poster-web-shop\\src\\utils\\store\\provider.tsx",[],[],"D:\\Projects\\poster-web-shop\\src\\utils\\store\\store.ts",[],[],"D:\\Projects\\poster-web-shop\\src\\app\\checkout\\page.tsx",["307"],[],"'use client'\r\n\r\nimport {BaseSyntheticEvent, SyntheticEvent, useEffect, useRef, useState} from \"react\";\r\nimport {useAppDispatch, useAppSelector} from \"@/utils/store/hooks\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport CartItem from \"@/components/Cart/CartItem/CartItem\";\r\nimport {doc, getDoc} from \"@firebase/firestore\";\r\nimport {auth, db} from \"@/utils/firebase/firebase\";\r\nimport {setCart} from \"@/utils/store/cartSlice\";\r\nimport {onAuthStateChanged} from \"@firebase/auth\";\r\nimport axios from \"axios\";\r\nimport {Autocomplete, useLoadScript} from \"@react-google-maps/api\";\r\nimport {getGeocode, getLatLng} from \"use-places-autocomplete\";\r\n\r\ninterface IPaymentData {\r\n    name: string;\r\n    phone: string;\r\n    shippingAddress: string;\r\n}\r\n\r\nconst Checkout = () => {\r\n    const {isLoaded} = useLoadScript({\r\n        googleMapsApiKey: process.env.GOOGLE_API_KEY!,\r\n        libraries: ['places', 'geocoding']\r\n    });\r\n\r\n    const [isLoading, setloading] = useState(true);\r\n    const [isCompleteRequest, setCompleteRequest] = useState(true);\r\n    const cart = useAppSelector(state => state.cartReducer.cart);\r\n    const [user, setUser] = useState<any>();\r\n    const dispatch = useAppDispatch();\r\n    const [searchResult, setSearchResult] = useState<any>(null);\r\n    const autocompleteRef = useRef();\r\n    const [deliveryType, setDeliveryType] = useState(1);\r\n    const [openPayment, setOpenPayment] = useState<string>('');\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        formState: {errors},\r\n    } = useForm<IPaymentData>();\r\n\r\n    useEffect(() => {\r\n        if (openPayment.trim().length > 0) {\r\n            // window.open(openPayment, \"_self\");\r\n            location.href = openPayment;\r\n            setOpenPayment('');\r\n        }\r\n    }, [openPayment]);\r\n\r\n\r\n    useEffect(() => {\r\n        setloading(true);\r\n\r\n        const userAuthId = localStorage.getItem(\"authUserId\");\r\n\r\n        onAuthStateChanged(auth, async (user) => {\r\n            if (user) {\r\n                if (userAuthId) {\r\n                    console.log(\"auth\", userAuthId);\r\n\r\n                    Promise.all([getUserInfo(userAuthId), getCart(userAuthId)])\r\n                        .then(() => setloading(false));\r\n                }\r\n            } else {\r\n                dispatch(setCart([]));\r\n\r\n                setloading(false);\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    const onLoad = (autocomplete: any) => {\r\n        setSearchResult(autocomplete);\r\n    }\r\n\r\n    // function getDistance(p1lat: number, p2lat: number, p1lng: number, p2lng: number) {\r\n    //     let R = 6378137; // Earth’s mean radius in meter\r\n    //     let dLat = getRad(p2lat - p1lat);\r\n    //     let dLong = getRad(p2lng - p1lng);\r\n    //     let a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n    //         Math.cos(getRad(p1lat)) * Math.cos(getRad(p2lat)) *\r\n    //         Math.sin(dLong / 2) * Math.sin(dLong / 2);\r\n    //     let c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n    //     let d = R * c;\r\n    //     return d; // returns the distance in meter\r\n    // }\r\n    const getDistance = async (lat1: number, lng1: number, lat2: number, lng2: number) => {\r\n        return new Promise((resolve) => {\r\n            const service = new window.google.maps.DistanceMatrixService();\r\n            service.getDistanceMatrix(\r\n                {\r\n                    destinations: [{lat: lat2, lng: lng2}],\r\n                    origins: [{lat: lat1, lng: lng1}],\r\n                    travelMode: window.google.maps.TravelMode.DRIVING\r\n                },\r\n                (response) => {\r\n                    resolve(response)\r\n                }\r\n            );\r\n        });\r\n    };\r\n    const onPlaceChanged = async () => {\r\n        if (searchResult != null) {\r\n            //variable to store the result\r\n            const place = searchResult.getPlace();\r\n            //variable to store the name from place details result\r\n            const name = place.name;\r\n            //variable to store the status from place details result\r\n            const status = place.business_status;\r\n            //variable to store the formatted address from place details result\r\n            const formattedAddress = place.formatted_address;\r\n            // console.log(place);\r\n            //console log all results\r\n            console.log(`Name: ${name}`);\r\n            console.log(`Business Status: ${status}`);\r\n            console.log(`Formatted Address: ${formattedAddress}`);\r\n            const results = await getGeocode({address: formattedAddress})\r\n            const {lat, lng} = await getLatLng(results[0]);\r\n\r\n            const shopLat = 47.939615;\r\n            const shopLng = 33.426008;\r\n\r\n            // 47.939615 33.426008\r\n\r\n            getDistance(shopLat, shopLng, lat, lng).then(response => console.log('res', response));\r\n\r\n            console.log(lat, lng);\r\n        }\r\n    }\r\n\r\n    const submitHandler = (data: IPaymentData, event: BaseSyntheticEvent<object, any, any> | undefined) => {\r\n        setCompleteRequest(false);\r\n        const amount = cart.reduce(\r\n            (acc, cartItem) =>\r\n                acc +\r\n                Number(cartItem.product.price[\"1\"].slice(0, -2)) *\r\n                cartItem.quantity,\r\n            0,\r\n        );\r\n        const cartJoin = cart.map(cartItem => `${cartItem.product.product_name} (${cartItem.quantity} ед.)`).join(' ');\r\n\r\n        const params = {\r\n            amount: amount,\r\n            description: `Оплата товаров: ${cartJoin}`,\r\n            posterData: {\r\n                phone: data.phone,\r\n                products: cart.map(cartItem => {\r\n                    return {product_id: Number(cartItem.product.product_id), count: Number(cartItem.quantity)};\r\n                }),\r\n                shippingAddress: deliveryType === 1 ? 'Самовывоз' : data.shippingAddress,\r\n                name: data.name\r\n            }\r\n        }\r\n\r\n        axios.post('https://f9p739-42889.csb.app/payment', {\r\n            ...params\r\n        }, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Access-Control-Allow-Origin\": \"*\"\r\n            }\r\n        })\r\n            .then((data) => {\r\n                console.log(data.data, data.status)\r\n\r\n                if (data.status === 200) {\r\n                    setOpenPayment(data.data.paymentURL);\r\n                } else {\r\n                    console.error('ERROR', data.data)\r\n                }\r\n            })\r\n            .catch(error => console.error(error))\r\n            .finally(() => setCompleteRequest(true))\r\n    }\r\n\r\n    const getCart = async (userAuthId: string) => {\r\n        const userRef = doc(db, \"users\", userAuthId!.toString());\r\n        const userSnapshot = await getDoc(userRef);\r\n\r\n        dispatch(setCart(userSnapshot.data()?.cart || []));\r\n        // setC(userSnapshot.data()?.cart || []);\r\n    };\r\n\r\n    const getUserInfo = async (userAuthId: string) => {\r\n        const userRef = doc(db, \"users\", userAuthId!.toString());\r\n        const userSnapshot = await getDoc(userRef);\r\n\r\n        const name = userSnapshot.data()?.name;\r\n        const phone = userSnapshot.data()?.phone;\r\n\r\n        setUser({...user, name, phone});\r\n    }\r\n\r\n    function handleChangeRadio(e: SyntheticEvent<HTMLInputElement>) {\r\n        const target = e.target as HTMLInputElement;\r\n        setDeliveryType(Number(target.value))\r\n    }\r\n\r\n    if (isLoading || !isLoaded) {\r\n        return <div>Loading...</div>\r\n    }\r\n\r\n    return <div id=\"liqpay_checkout\" className=\"shadow mx-24 my-14 p-5\">\r\n        {cart.length > 0 ? (\r\n            <><h2 className=\"text-xl font-bold border-b py-2\">Заказ</h2>\r\n                <div className=\"flex gap-x-14 justify-center pt-6\">\r\n                    <form className=\"flex-1 flex flex-col gap-y-5\" onSubmit={handleSubmit(submitHandler)}>\r\n                        <div>\r\n                            <label\r\n                                htmlFor=\"name\"\r\n                                className={`mb-1 block text-sm font-bold text-gray-700 ${\r\n                                    errors.name ? 'after:ml-0.5 after:text-red-500 after:content-[\"*\"]' : null\r\n                                }`}\r\n                            >\r\n                                Имя\r\n                            </label>\r\n                            <div className=\"relative\">\r\n                                <input\r\n                                    readOnly={!!user.name}\r\n                                    value={user.name}\r\n                                    className={`block w-full rounded-md shadow-sm ${\r\n                                        errors.name\r\n                                            ? \"border-red-300 focus:border-red-300 focus:ring focus:ring-red-200\"\r\n                                            : \"border-gray-300 focus:border-primary-400 focus:ring focus:ring-primary-200\"\r\n                                    }  focus:ring-opacity-50 disabled:cursor-not-allowed disabled:bg-gray-50 disabled:text-gray-500`}\r\n                                    {...register(\"name\", {\r\n                                        required: {\r\n                                            value: true,\r\n                                            message: 'Поле обязательное для заполнения'\r\n                                        }\r\n                                    })}\r\n                                    type=\"text\"\r\n                                    name=\"name\"\r\n                                />\r\n                            </div>\r\n                            {errors.name ? (\r\n                                <p className=\"mt-1 text-sm text-red-500\">{errors.name.message}</p>\r\n                            ) : null}\r\n                        </div>\r\n                        <div>\r\n                            <label\r\n                                htmlFor=\"phone\"\r\n                                className={`mb-1 block text-sm font-bold text-gray-700 ${\r\n                                    errors.phone ? 'after:ml-0.5 after:text-red-500 after:content-[\"*\"]' : null\r\n                                }`}\r\n                            >\r\n                                Телефон\r\n                            </label>\r\n                            <div className=\"relative\">\r\n                                <input\r\n                                    readOnly={!!user.phone}\r\n                                    value={user.phone}\r\n                                    className={`block w-full rounded-md shadow-sm ${\r\n                                        errors.phone\r\n                                            ? \"border-red-300 focus:border-red-300 focus:ring focus:ring-red-200\"\r\n                                            : \"border-gray-300 focus:border-primary-400 focus:ring focus:ring-primary-200\"\r\n                                    }  focus:ring-opacity-50 disabled:cursor-not-allowed disabled:bg-gray-50 disabled:text-gray-500`}\r\n                                    {...register(\"phone\", {\r\n                                        required: {\r\n                                            value: true,\r\n                                            message: 'Поле обязательное для заполнения'\r\n                                        }\r\n                                    })}\r\n                                    placeholder=\"Например: +380686560665\"\r\n                                    type=\"tel\"\r\n                                    name=\"phone\"\r\n                                />\r\n                            </div>\r\n                            {errors.phone ? (\r\n                                <p className=\"mt-1 text-sm text-red-500\">{errors.phone.message}</p>\r\n                            ) : null}\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"flex flex-col gap-y-2 mb-4\">\r\n                                <div className=\"flex items-center space-x-2\">\r\n                                    <input onChange={handleChangeRadio} value=\"1\" type=\"radio\" id=\"delivery1\" checked={deliveryType === 1} name=\"delivery\" className=\"h-4 w-4 rounded-full border-gray-300 text-rose-400 shadow-sm focus:border-rose-300 focus:ring focus:ring-rose-200 focus:ring-opacity-50 focus:ring-offset-0 disabled:cursor-not-allowed disabled:text-gray-400\" />\r\n                                    <label htmlFor=\"delivery1\" className=\"text-sm font-medium text-gray-700\">Самовывоз из магазина</label>\r\n                                </div>\r\n                                <div className=\"flex space-x-2\">\r\n                                    <div className=\"flex h-5 items-center\">\r\n                                        <input onChange={handleChangeRadio} value=\"2\" type=\"radio\" id=\"delivery2\" checked={deliveryType === 2} name=\"delivery\" className=\"h-4 w-4 rounded-full border-gray-300 text-rose-400 shadow-sm focus:border-rose-300 focus:ring focus:ring-rose-200 focus:ring-opacity-50 focus:ring-offset-0 disabled:cursor-not-allowed disabled:text-gray-400\" />\r\n                                    </div>\r\n                                    <label htmlFor=\"delivery2\" className=\"text-sm\">\r\n                                        <div className=\"font-medium text-gray-700\">Доставка по адресу</div>\r\n                                        <p className=\"text-gray-500\">Укажите корректный адрес, стоимость доставки будет расчитываться на его основе!</p>\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                            {deliveryType === 2 && (\r\n                                <>\r\n                                    <label\r\n                                        htmlFor=\"shippingAddress\"\r\n                                        className={`mb-1 block text-sm font-bold text-gray-700 ${\r\n                                            errors.shippingAddress ? 'after:ml-0.5 after:text-red-500 after:content-[\"*\"]' : null\r\n                                        }`}\r\n                                    >\r\n                                        Адрес доставки\r\n                                    </label>\r\n                                    <div className=\"relative\">\r\n                                        <Autocomplete onPlaceChanged={onPlaceChanged} onLoad={onLoad}\r\n                                                      options={{\r\n                                                          componentRestrictions: { country: \"ua\" },\r\n                                                      }}\r\n                                        >\r\n                                            <input\r\n                                                className={`block w-full rounded-md shadow-sm ${\r\n                                                    errors.shippingAddress\r\n                                                        ? \"border-red-300 focus:border-red-300 focus:ring focus:ring-red-200\"\r\n                                                        : \"border-gray-300 focus:border-primary-400 focus:ring focus:ring-primary-200\"\r\n                                                }  focus:ring-opacity-50 disabled:cursor-not-allowed disabled:bg-gray-50 disabled:text-gray-500`}\r\n                                                {...register(\"shippingAddress\", {\r\n                                                    required: {\r\n                                                        value: true,\r\n                                                        message: 'Поле обязательное для заполнения'\r\n                                                    }\r\n                                                })}\r\n                                                placeholder=\"Например: Сичеславская 1/2\"\r\n                                                type=\"text\"\r\n                                                name=\"shippingAddress\"\r\n                                            />\r\n                                        </Autocomplete>\r\n                                    </div>\r\n                                    {errors.shippingAddress ? (\r\n                                        <p className=\"mt-1 text-sm text-red-500\">{errors.shippingAddress.message}</p>\r\n                                    ) : null}\r\n                                </>\r\n                            )}\r\n                        </div>\r\n                        <button\r\n                            disabled={!isCompleteRequest}\r\n                            className=\"border border-rose-400 text-white bg-rose-400 px-4 py-2 rounded transition-colors hover:bg-rose-500\"\r\n                        >\r\n                            {isCompleteRequest ? 'Перейти к оплате' : 'Обработка...'}\r\n                        </button>\r\n                    </form>\r\n                    <div className=\"flex-1\">\r\n                        <h3 className=\"text-right border-b pb-2\">\r\n                            <span>Всего к оплате: &#8372;{\" \"}</span>\r\n                            {cart.reduce(\r\n                                (acc, cartItem) =>\r\n                                    acc +\r\n                                    Number(cartItem.product.price[\"1\"].slice(0, -2)) *\r\n                                    cartItem.quantity,\r\n                                0,\r\n                            )}\r\n                        </h3>\r\n                        <div className=\"pt-6 flex flex-col gap-y-6\">\r\n                            {cart.map(cartItem => (\r\n                                <CartItem cartItem={cartItem} quantityItem={cartItem.quantity}\r\n                                          key={cartItem.product.product_id} inCheckout={true}/>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        ) : (\r\n            <div>Нет доступа</div>\r\n        )}\r\n\r\n    </div>\r\n}\r\n\r\nexport default Checkout;","D:\\Projects\\poster-web-shop\\src\\components\\SearchModal\\FindProductItem.tsx",[],[],"D:\\Projects\\poster-web-shop\\src\\components\\SearchModal\\SearchModal.tsx",["308"],[],"import {MagnifyingGlassIcon} from \"@heroicons/react/24/outline\";\r\nimport {FormEvent, FormEventHandler, SyntheticEvent, useEffect, useRef, useState} from \"react\";\r\nimport useDebounce from \"@/hooks/useDebounce\";\r\nimport {useAppDispatch, useAppSelector} from \"@/utils/store/hooks\";\r\nimport {Product} from \"@/types\";\r\nimport {FindProductItem} from \"@/components/SearchModal/FindProductItem\";\r\nimport {collection, onSnapshot} from \"@firebase/firestore\";\r\nimport {db} from \"@/utils/firebase/firebase\";\r\nimport {setComments} from \"@/utils/store/commentsSlice\";\r\n\r\ntype Props = {\r\n    onClose: () => void;\r\n    isOpen: boolean;\r\n}\r\n\r\nconst SearchModal = (props: Props) => {\r\n    const {onClose, isOpen} = props;\r\n    const [searchValue, setSearchValue] = useState<string>('');\r\n    const debouncedSearchValue = useDebounce(searchValue, 300);\r\n\r\n    const products = useAppSelector(state => state.productsReducer.products);\r\n    const [filteredProducts, setFilteredProducts] = useState<Product[]>([]);\r\n\r\n    useEffect(() => {\r\n        isOpen ? document.body.style.overflow = 'hidden' : document.body.style.overflow = 'visible';\r\n    }, [isOpen]);\r\n\r\n    useEffect(() => {\r\n\r\n        if (debouncedSearchValue.trim().length <= 0) {\r\n            setFilteredProducts([]);\r\n            console.log('here')\r\n        } else {\r\n            const filtered = products.filter(product => product.product_name.toLowerCase().trim().includes(debouncedSearchValue.toLowerCase().trim()));\r\n            setFilteredProducts(filtered);\r\n        }\r\n    }, [debouncedSearchValue]);\r\n\r\n    if (!isOpen) {\r\n        return null;\r\n    }\r\n\r\n    return <div className=\"absolute w-screen h-screen bg-black bg-opacity-50 top-0 left-0 z-50 backdrop-blur-sm\"\r\n                onClick={() => {\r\n                    setSearchValue('');\r\n                    onClose();\r\n                }}>\r\n        <div onClick={(e) => e.stopPropagation()} className=\"bg-white py-6 px-20\">\r\n            <div className=\"relative flex items-center gap-x-6\">\r\n                <div className=\"pointer-events-none absolute inset-y-0 left-0 flex items-center px-2.5\">\r\n                    <MagnifyingGlassIcon className=\"h-5 w-5 text-gray-500\"/>\r\n                </div>\r\n                <input type=\"text\" id=\"search\"\r\n                       className=\"block w-full rounded-md border-gray-300 pl-10 shadow-sm focus:border-primary-400 focus:ring focus:ring-primary-200 focus:ring-opacity-50 disabled:cursor-not-allowed disabled:bg-gray-50 disabled:text-gray-500\"\r\n                       placeholder=\"Поиск товара...\"\r\n                       value={searchValue}\r\n                       onChange={(event) => setSearchValue(event.target.value)}\r\n                />\r\n                <span onClick={() => {\r\n                    setSearchValue('');\r\n                    onClose();\r\n                }} className=\"transition-colors hover:text-rose-400 cursor-pointer\">Отмена</span>\r\n            </div>\r\n            <div>\r\n                <h2 className=\"text-lg font-medium leading-10\">Результаты\r\n                    поиска {filteredProducts.length > 0 && `(${filteredProducts.length})`}</h2>\r\n                <div className=\"flex flex-col max-h-[300px] overflow-y-auto\">\r\n                    {filteredProducts.length === 0 ? (\r\n                        <span>Товаров не найдено</span>\r\n                    ) : (\r\n                        filteredProducts.map(findProduct => (\r\n                            <FindProductItem key={findProduct.product_id} product={findProduct}/>\r\n                        ))\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport {SearchModal};","D:\\Projects\\poster-web-shop\\src\\utils\\getRad.ts",[],[],"D:\\Projects\\poster-web-shop\\src\\types.d.ts",[],[],"D:\\Projects\\poster-web-shop\\src\\app\\types.d.ts",[],[],"D:\\Projects\\poster-web-shop\\src\\components\\HomeComponent.tsx",["309"],[],"'use client';\r\n\r\nimport Link from \"next/link\";\r\nimport {ArrowRightIcon, PresentationChartLineIcon, RocketLaunchIcon} from \"@heroicons/react/24/outline\";\r\nimport SwiperProducts from \"@/components/SwiperProducts/SwiperProducts\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {Product} from \"@/types\";\r\nimport {setProducts} from \"@/utils/store/productSlice\";\r\nimport {useAppDispatch, useAppSelector} from \"@/utils/store/hooks\";\r\n\r\ntype Props = {\r\n    productsData: Product[];\r\n    isLoadingData: boolean;\r\n}\r\nconst HomeComponent = (props: Props) => {\r\n    const {productsData,isLoadingData} = props;\r\n    const [isLoading, setLoading] = useState(isLoadingData);\r\n    const dispatch = useAppDispatch();\r\n    const products = useAppSelector(state => state.productsReducer.products);\r\n\r\n    useEffect(() => {\r\n        dispatch(setProducts(productsData))\r\n        setLoading(false);\r\n    }, []);\r\n\r\n    return <div>\r\n        <div className=\"page-top\">\r\n            {/*<h1 className=\"font-bold text-4xl text-white relative z-10\">Цветы</h1>*/}\r\n            <h3 className=\"my-[24px] font-bold text-gray-50 text-2xl relative z-10\">\r\n                Мы не просто создаем букеты — мы создаем эмоции\r\n            </h3>\r\n        </div>\r\n        <div className=\"products-popular px-10 my-7 items-center\">\r\n            <div className=\"mb-7 flex justify-between\">\r\n                <h3 className=\"text-2xl font-medium\">Популярные товары</h3>\r\n                <Link\r\n                    href=\"/products?sort=1&price=0-10000\"\r\n                    className=\"underline text-rose-400 flex gap-x-2 items-center\"\r\n                    title=\"Перейти в каталог товаров\"\r\n                >\r\n                    <span>Перейти в каталог</span>\r\n                    <ArrowRightIcon className=\"h-5 w-5 text-rose-400\"/>\r\n                </Link>\r\n            </div>\r\n            <SwiperProducts\r\n                isLoading={isLoading}\r\n                breakpoints={{\r\n                    320: {\r\n                        slidesPerView: 1.3,\r\n                    },\r\n                    485: {\r\n                        slidesPerView: 2.3,\r\n                    },\r\n                    700: {\r\n                        slidesPerView: 3.3,\r\n                    },\r\n                    1000: {\r\n                        slidesPerView: 4.5,\r\n                    },\r\n                }}\r\n                products={products}\r\n            />\r\n        </div>\r\n        <div className=\"flex gap-x-16 px-10 justify-center bg-[#e5e7eb] py-10 bg-opacity-50\">\r\n            <div className=\"flex gap-x-3 items-center transition-colors hover:text-rose-400\">\r\n                <RocketLaunchIcon className=\"w-8 h-8 text-black\"/>\r\n                <span>Быстрая доставка цветов</span>\r\n            </div>\r\n            {/*<span className=\"w-[1px] h-full bg-[#e5e7eb]\">123</span>*/}\r\n            <div className=\"flex gap-x-3 items-center transition-colors hover:text-rose-400\">\r\n                <PresentationChartLineIcon className=\"w-8 h-8 text-black\"/>\r\n                <span>Большой выбор свежих и красивых цветов</span>\r\n            </div>\r\n        </div>\r\n        <div className=\"products-new px-10 my-7 items-center\">\r\n            <div className=\"mb-7 flex justify-between\">\r\n                <h3 className=\"text-2xl font-medium\">Новые товары</h3>\r\n                <Link\r\n                    href=\"/products?sort=2&price=0-10000\"\r\n                    className=\"underline text-rose-400 flex gap-x-2 items-center\"\r\n                    title=\"Перейти в каталог товаров\"\r\n                >\r\n                    <span>Перейти в каталог</span>\r\n                    <ArrowRightIcon className=\"h-5 w-5 text-rose-400\"/>\r\n                </Link>\r\n            </div>\r\n            <SwiperProducts\r\n                isLoading={isLoading}\r\n                breakpoints={{\r\n                    320: {\r\n                        slidesPerView: 1.3,\r\n                    },\r\n                    485: {\r\n                        slidesPerView: 2.3,\r\n                    },\r\n                    700: {\r\n                        slidesPerView: 3.3,\r\n                    },\r\n                    1000: {\r\n                        slidesPerView: 4.5,\r\n                    },\r\n                }}\r\n                products={[...products].reverse()}\r\n            />\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default HomeComponent;","D:\\Projects\\poster-web-shop\\src\\components\\ProductsComponent.tsx",["310","311","312","313","314"],[],"'use client';\r\n\r\nimport {FunnelIcon} from \"@heroicons/react/24/solid\";\r\nimport SortSelect from \"@/components/Products/SortSelect/SortSelect\";\r\nimport CategoriesFilter from \"@/components/Products/CategoriesFilter/CategoriesFilter\";\r\nimport Products from \"@/components/Products/Products\";\r\nimport React, {useCallback, useEffect, useState} from \"react\";\r\nimport {usePathname, useRouter, useSearchParams} from \"next/navigation\";\r\nimport {useAppDispatch} from \"@/utils/store/hooks\";\r\nimport {filterProducts, setProducts} from \"@/utils/store/productSlice\";\r\nimport axios from \"axios\";\r\nimport {Category, Product} from \"@/types\";\r\nimport {setCategories} from \"@/utils/store/categoriesSlice\";\r\nimport {SingleValue} from \"react-select\";\r\n\r\ntype Props = {\r\n    isLoadingData: boolean;\r\n    productsData: Product[];\r\n    categoriesData: Category[];\r\n}\r\n\r\nconst ProductsComponent = (props: Props) => {\r\n    const {productsData, categoriesData, isLoadingData} = props;\r\n\r\n    const [isLoading, setLoading] = useState(isLoadingData);\r\n    const router = useRouter();\r\n    const pathname = usePathname();\r\n    const searchParams = useSearchParams()!;\r\n    const getQueryValue = (key: string) => {\r\n        const params = new URLSearchParams(searchParams);\r\n        return params.get(key);\r\n    };\r\n\r\n    const dispatch = useAppDispatch();\r\n    const [filterIsVisible, setFilterVisible] = useState(false);\r\n    const [categoriesFilter, setCategoriesFilter] = useState<string[]>(\r\n        getQueryValue(\"category\")?.split(\",\") || [],\r\n    );\r\n    const [sortFilter, setSortFilter] = useState(getQueryValue(\"sort\") || \"1\");\r\n    const [priceFilter, setPriceFilter] = useState<string[] | [number, number]>(\r\n        getQueryValue(\"price\")?.split(\"-\") || [0, 10000],\r\n    );\r\n\r\n    useEffect(() => {\r\n        dispatch(setProducts(productsData));\r\n        dispatch(setCategories(categoriesData));\r\n        setLoading(false);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        dispatch(\r\n            filterProducts({\r\n                categoriesFilter: categoriesFilter,\r\n                sortFilter: sortFilter,\r\n                priceFilter: priceFilter,\r\n            }),\r\n        );\r\n    }, [categoriesFilter, sortFilter, priceFilter]);\r\n\r\n    // useEffect(() => {\r\n    //     setLoading(true);\r\n    //     // router.push(\"/products?category=test\");\r\n    //     const getProducts = async () => {\r\n    //         const response = await axios.get(\"/api/products\");\r\n    //         const products: Product[] = await response.data;\r\n    //\r\n    //         dispatch(setProducts(products));\r\n    //     };\r\n    //\r\n    //     const getCategories = async () => {\r\n    //         const response = await axios.get(\"/api/categories\");\r\n    //         const categories: Category[] = await response.data;\r\n    //\r\n    //         dispatch(setCategories(categories));\r\n    //     };\r\n    //\r\n    //     Promise.all([getProducts(), getCategories()]).finally(() => {\r\n    //         dispatch(\r\n    //             filterProducts({\r\n    //                 categoriesFilter: categoriesFilter,\r\n    //                 sortFilter: sortFilter,\r\n    //                 priceFilter: priceFilter,\r\n    //             }),\r\n    //         );\r\n    //         setLoading(false);\r\n    //     });\r\n    // }, []);\r\n\r\n    useEffect(() => {\r\n        console.log(\"pathname changed\");\r\n    }, [pathname]);\r\n\r\n    useEffect(() => {\r\n        router.push(\r\n            `${pathname}?${createQueryString(\r\n                \"category\",\r\n                categoriesFilter.join(\",\"),\r\n            )}`,\r\n            {\r\n                scroll: false,\r\n            },\r\n        );\r\n    }, [categoriesFilter]);\r\n\r\n    useEffect(() => {\r\n        router.push(`${pathname}?${createQueryString(\"sort\", sortFilter)}`, {\r\n            scroll: false,\r\n        });\r\n    }, [sortFilter]);\r\n\r\n    useEffect(() => {\r\n        router.push(\r\n            `${pathname}?${createQueryString(\"price\", priceFilter.join(\"-\"))}`,\r\n            {\r\n                scroll: false,\r\n            },\r\n        );\r\n    }, [priceFilter]);\r\n\r\n    const createQueryString = useCallback(\r\n        (name: string, value: string) => {\r\n            const params = new URLSearchParams(searchParams);\r\n            params.set(name, value);\r\n\r\n            return params.toString();\r\n        },\r\n        [searchParams],\r\n    );\r\n\r\n    const onChangeSortHandler = (\r\n        newValue: SingleValue<{ value: string; label: string }>,\r\n    ) => {\r\n        console.log(newValue?.value);\r\n        setSortFilter(newValue!.value.toString());\r\n        // router.push(`${pathname}?${createQueryString(\"sort\", newValue!.value)}`, {\r\n        //   scroll: false,\r\n        // });\r\n    };\r\n\r\n    const onChangeFilterCategoriesHandler = (\r\n        e: React.SyntheticEvent<HTMLInputElement>,\r\n    ) => {\r\n        const target = e.target as HTMLInputElement;\r\n\r\n        if (target.checked) {\r\n            setCategoriesFilter((prev) => [...prev, target.value]);\r\n        } else {\r\n            const updatedFilter = categoriesFilter.filter(\r\n                (category) => category !== target.value,\r\n            );\r\n            setCategoriesFilter(updatedFilter);\r\n        }\r\n\r\n        console.log(\"CHECKED:\", target.checked, target.value);\r\n    };\r\n\r\n    const onChangeFilterPriceHandler = (\r\n        resultValues: [number, number],\r\n        thumbIndex: number,\r\n    ) => {\r\n        // router.push(\r\n        //   `${pathname}?${createQueryString(\"price\", resultValues.join(\"-\"))}`,\r\n        //   {\r\n        //     scroll: false,\r\n        //   },\r\n        // );\r\n        setPriceFilter(resultValues);\r\n    };\r\n\r\n    return <div className=\"products-page\">\r\n        <div className=\"page-top\">\r\n            <h1 className=\"font-bold text-4xl text-white relative z-10\">Цветы</h1>\r\n            <h3 className=\"mt-4 font-normal text-gray-50 relative z-10\">\r\n                Самый быстрый способ проявить заботу\r\n            </h3>\r\n        </div>\r\n        <aside className=\"page-filters\">\r\n            <div>\r\n                <div\r\n                    className=\"filters-left flex gap-x-2 items-center\"\r\n                    role=\"button\"\r\n                    onClick={() => setFilterVisible((prev) => !prev)}\r\n                >\r\n                    <FunnelIcon className=\"h-5 w-5 text-gray-400\" />\r\n                    <span>Фильтр</span>\r\n                </div>\r\n                <span className=\"filter-divider\"></span>\r\n                <span\r\n                    className=\"text-gray-500 transition-colors hover:text-rose-400\"\r\n                    role=\"button\"\r\n                    onClick={() => {\r\n                        // const sort = createQueryString(\"sort\", \"1\");\r\n                        // const price = createQueryString(\"price\", \"0-10000\");\r\n                        // router.push(\"/products\", {\r\n                        //   scroll: false,\r\n                        // });\r\n                        // router.refresh();\r\n                    }}\r\n                >\r\n            Очистить всё\r\n          </span>\r\n            </div>\r\n            <div>\r\n                <SortSelect\r\n                    onChangeHandler={onChangeSortHandler}\r\n                    defaultValue={Number(sortFilter)}\r\n                />\r\n            </div>\r\n        </aside>\r\n        <CategoriesFilter\r\n            isVisible={filterIsVisible}\r\n            setVisible={setFilterVisible}\r\n            onChangeFilterCategoriesHandler={onChangeFilterCategoriesHandler}\r\n            onChangeFilterPriceHandler={onChangeFilterPriceHandler}\r\n            priceSliderDefaultValue={priceFilter}\r\n            categoriesFilter={categoriesFilter}\r\n        />\r\n        <Products isLoading={isLoading} />\r\n    </div>\r\n}\r\n\r\nexport default ProductsComponent;",{"ruleId":"315","severity":1,"message":"316","line":50,"column":5,"nodeType":"317","endLine":50,"endColumn":7,"suggestions":"318"},{"ruleId":"315","severity":1,"message":"319","line":52,"column":8,"nodeType":"317","endLine":52,"endColumn":10,"suggestions":"320"},{"ruleId":"315","severity":1,"message":"321","line":34,"column":6,"nodeType":"317","endLine":34,"endColumn":25,"suggestions":"322"},{"ruleId":"323","severity":2,"message":"324","line":23,"column":29,"nodeType":"325","messageId":"326","endLine":59,"endColumn":3,"suppressions":"327"},{"ruleId":"315","severity":1,"message":"328","line":81,"column":6,"nodeType":"317","endLine":81,"endColumn":8,"suggestions":"329"},{"ruleId":"315","severity":1,"message":"328","line":81,"column":6,"nodeType":"317","endLine":81,"endColumn":8,"suggestions":"330"},{"ruleId":"315","severity":1,"message":"331","line":70,"column":8,"nodeType":"317","endLine":70,"endColumn":10,"suggestions":"332"},{"ruleId":"315","severity":1,"message":"333","line":37,"column":8,"nodeType":"317","endLine":37,"endColumn":30,"suggestions":"334"},{"ruleId":"315","severity":1,"message":"335","line":24,"column":8,"nodeType":"317","endLine":24,"endColumn":10,"suggestions":"336"},{"ruleId":"315","severity":1,"message":"337","line":48,"column":8,"nodeType":"317","endLine":48,"endColumn":10,"suggestions":"338"},{"ruleId":"315","severity":1,"message":"339","line":58,"column":8,"nodeType":"317","endLine":58,"endColumn":51,"suggestions":"340"},{"ruleId":"315","severity":1,"message":"341","line":103,"column":8,"nodeType":"317","endLine":103,"endColumn":26,"suggestions":"342"},{"ruleId":"315","severity":1,"message":"341","line":109,"column":8,"nodeType":"317","endLine":109,"endColumn":20,"suggestions":"343"},{"ruleId":"315","severity":1,"message":"341","line":118,"column":8,"nodeType":"317","endLine":118,"endColumn":21,"suggestions":"344"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'params.slug', and 'products.length'. Either include them or remove the dependency array.","ArrayExpression",["345"],"React Hook useEffect has missing dependencies: 'dispatch' and 'getCart'. Either include them or remove the dependency array.",["346"],"React Hook useEffect has missing dependencies: 'cartItem.product', 'dispatch', and 'quantity'. Either include them or remove the dependency array.",["347"],"react/display-name","Component definition is missing display name","CallExpression","noDisplayName",["348"],"React Hook useEffect has missing dependencies: 'dispatch' and 'productId'. Either include them or remove the dependency array.",["349"],["350"],"React Hook useEffect has missing dependencies: 'dispatch', 'getCart', and 'getUserInfo'. Either include them or remove the dependency array.",["351"],"React Hook useEffect has a missing dependency: 'products'. Either include it or remove the dependency array.",["352"],"React Hook useEffect has missing dependencies: 'dispatch' and 'productsData'. Either include them or remove the dependency array.",["353"],"React Hook useEffect has missing dependencies: 'categoriesData', 'dispatch', and 'productsData'. Either include them or remove the dependency array.",["354"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["355"],"React Hook useEffect has missing dependencies: 'createQueryString', 'pathname', and 'router'. Either include them or remove the dependency array.",["356"],["357"],["358"],{"desc":"359","fix":"360"},{"desc":"361","fix":"362"},{"desc":"363","fix":"364"},{"kind":"365","justification":"366"},{"desc":"367","fix":"368"},{"desc":"367","fix":"369"},{"desc":"370","fix":"371"},{"desc":"372","fix":"373"},{"desc":"374","fix":"375"},{"desc":"376","fix":"377"},{"desc":"378","fix":"379"},{"desc":"380","fix":"381"},{"desc":"382","fix":"383"},{"desc":"384","fix":"385"},"Update the dependencies array to be: [dispatch, params.slug, products.length]",{"range":"386","text":"387"},"Update the dependencies array to be: [dispatch, getCart]",{"range":"388","text":"389"},"Update the dependencies array to be: [cartItem.product, debouncedQuantity, dispatch, quantity]",{"range":"390","text":"391"},"directive","","Update the dependencies array to be: [dispatch, productId]",{"range":"392","text":"393"},{"range":"394","text":"393"},"Update the dependencies array to be: [dispatch, getCart, getUserInfo]",{"range":"395","text":"396"},"Update the dependencies array to be: [debouncedSearchValue, products]",{"range":"397","text":"398"},"Update the dependencies array to be: [dispatch, productsData]",{"range":"399","text":"400"},"Update the dependencies array to be: [categoriesData, dispatch, productsData]",{"range":"401","text":"402"},"Update the dependencies array to be: [categoriesFilter, sortFilter, priceFilter, dispatch]",{"range":"403","text":"404"},"Update the dependencies array to be: [categoriesFilter, createQueryString, pathname, router]",{"range":"405","text":"406"},"Update the dependencies array to be: [createQueryString, pathname, router, sortFilter]",{"range":"407","text":"408"},"Update the dependencies array to be: [createQueryString, pathname, priceFilter, router]",{"range":"409","text":"410"},[2098,2100],"[dispatch, params.slug, products.length]",[1689,1691],"[dispatch, getCart]",[1061,1080],"[cartItem.product, debouncedQuantity, dispatch, quantity]",[2725,2727],"[dispatch, productId]",[2694,2696],[2357,2359],"[dispatch, getCart, getUserInfo]",[1527,1549],"[debouncedSearchValue, products]",[897,899],"[dispatch, productsData]",[1912,1914],"[categoriesData, dispatch, productsData]",[2165,2208],"[categoriesFilter, sortFilter, priceFilter, dispatch]",[3613,3631],"[categoriesFilter, createQueryString, pathname, router]",[3787,3799],"[createQueryString, pathname, router, sortFilter]",[4013,4026],"[createQueryString, pathname, priceFilter, router]"]